function primBoneStruct = PrimBone(ID, parentID, name, head, tail, ...
    thickness, labelTrajectory, colorBone, edgeColorBone)
%PRIMBONE returns a primitive bone-object
%

global SCENE

boneLength = sqrt(sum((head-tail).^2));

%bones of length 0 are drawn as a sphere
if (boneLength == 0)
    s = PrimSphere(head, thickness);
    vertices = s.vertices;
    faces = s.faces;
    primBoneStruct = struct(...
        'id',ID,...
        'parentID',parentID,...
        'name',name,...
        'type','bone',...
        'vertices', vertices,...
        'vertstream',[],...
        'faces',faces,...
        'facecolor',colorBone,...
        'edgecolor',edgeColorBone, ...
        'labelHandle',[],...
        'labelStream',labelTrajectory,...
        'objectHandle',[],...
        'headPos',head,...
        'tailPos',head);
else
    if(strcmp(name, 'head') && SCENE.options.doTheMonkey.size > 0.0)
        [tv,tf] = patchRawFile(fullfile('objects', 'monkeyhead.raw'));
        tv = tv .* SCENE.options.doTheMonkey.size;
        tv = quatrot(tv',SCENE.options.doTheMonkey.orientation)';
        tv = translateVertices(tv, tail);
    elseif(strcmp(name, 'head') && SCENE.options.doTheMonkey.size < 0.0)
        [tv,tf] = patchRawFile(fullfile('objects', 'darth_vader_head.raw'));
        tv = tv .* SCENE.options.doTheMonkey.size;
        tv = quatrot(tv',SCENE.options.doTheMonkey.orientation)';
        tv = translateVertices(tv, tail);
    else
        sphereTail = PrimSphere(tail, thickness);
        tv = sphereTail.vertices;
        tf = sphereTail.faces;
    end
    boneThickness = boneLength/10;
    connector = PrimConnector(head, tail, boneThickness);
    cv = connector.vertices;
    cf = connector.faces + size(tv,1);

    vertices = [tv; cv];
    faces = [tf; cf];

    primBoneStruct = struct(...
        'id',ID,...
        'parentID',parentID,...
        'name',name,...
        'type','bone',...
        'vertices', vertices,...
        'vertstream',[],...
        'faces',faces,...
        'facecolor',colorBone,...
        'edgecolor',edgeColorBone, ...
        'labelHandle',[],...
        'labelStream',labelTrajectory,...
        'objectHandle',[],...
        'headPos',head,...
        'tailPos',tail);
end
end